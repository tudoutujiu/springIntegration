<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sdn.dao.bookMapper">
  <resultMap id="BaseResultMap" type="com.sdn.entity.book">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="bookid" jdbcType="INTEGER" property="bookid" />
    <result column="bname" jdbcType="VARCHAR" property="bname" />
    <result column="bookimg" jdbcType="VARCHAR" property="bookimg" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="details" jdbcType="VARCHAR" property="details" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
  </resultMap>
  <sql id="Base_Column_List">
    id, bookid, bname, bookimg, price, author, details, stock
  </sql>
  <select id="getbookpaing" parameterType="int" resultMap="BaseResultMap">
    select * from dnbookcity.book limit #{sta},#{ends}
  </select>
  <select id="total" resultType="int">
        select count(1) from book
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="add" parameterType="com.sdn.entity.book">
    insert into book (bname,
      bookimg, price, author, 
      details, stock)
    values (#{bname,jdbcType=VARCHAR},
      #{bookimg,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, #{author,jdbcType=VARCHAR}, 
      #{details,jdbcType=VARCHAR}, #{stock,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sdn.entity.book">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookid != null">
        bookid,
      </if>
      <if test="bname != null">
        bname,
      </if>
      <if test="bookimg != null">
        bookimg,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="details != null">
        details,
      </if>
      <if test="stock != null">
        stock,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bookid != null">
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="bname != null">
        #{bname,jdbcType=VARCHAR},
      </if>
      <if test="bookimg != null">
        #{bookimg,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="details != null">
        #{details,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sdn.entity.book">
    update book
    <set>
      <if test="bookid != null">
        bookid = #{bookid,jdbcType=INTEGER},
      </if>
      <if test="bname != null">
        bname = #{bname,jdbcType=VARCHAR},
      </if>
      <if test="bookimg != null">
        bookimg = #{bookimg,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="details != null">
        details = #{details,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sdn.entity.book">
    update book
    set bname = #{bname,jdbcType=VARCHAR},
      bookimg = #{bookimg,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      details = #{details,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>